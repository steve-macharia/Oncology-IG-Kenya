name: Build and Deploy FHIR IG

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      #################################################
      # 1. Checkout Repository with Submodules
      #################################################
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 1  # Optimize fetch to reduce verbosity and size

      #################################################
      # 2. Environment Setup
      #################################################

      - name: Set up Java 17 (IG Publisher requirement)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Node.js 18 (for SUSHI)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Ruby 3.1 (for Jekyll)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'

      #################################################
      # 3. Dependency Caching
      #################################################

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Cache Ruby gems
        if: hashFiles('**/Gemfile.lock') != ''
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      #################################################
      # 4. Install Tools
      #################################################

      - name: Install SUSHI globally and add to PATH
        run: |
          npm install -g fsh-sushi
          echo "PATH=$(npm bin -g):$PATH" >> $GITHUB_ENV
          echo "Installed SUSHI version: $(sushi --version)"

      - name: Install Jekyll and Bundler
        run: gem install jekyll bundler

      #################################################
      # 5. Diagnostic: Tool Versions
      #################################################

      - name: Verify tool versions
        run: |
          echo "Java version:" && java -version
          echo "Node.js version:" && node -v
          echo "SUSHI version:" && sushi --version
          echo "Jekyll version:" && jekyll --version

      #################################################
      # 6. Build FHIR IG
      #################################################

      - name: Download IG Publisher
        run: |
          mkdir -p input-cache
          wget -O input-cache/org.hl7.fhir.publisher.jar \
            https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar

      - name: Run SUSHI (convert FSH to FHIR JSON)
        run: |
          echo "Running SUSHI..."
          sushi .

      - name: Run IG Publisher (skip SUSHI phase)
        run: |
          echo "Running IG Publisher..."
          java -jar input-cache/org.hl7.fhir.publisher.jar -ig . --no-sushi -tx https://tx.fhir.org/r4

      #################################################
      # 7. Deploy to GitHub Pages
      #################################################

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
