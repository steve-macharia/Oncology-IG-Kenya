name: Build and Deploy FHIR IG

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo with submodules if any
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 1

      - name: 🔁 Initialize submodules (if any)
        run: |
          if [ -f .gitmodules ]; then
            git submodule update --init --recursive
          else
            echo "⚠️ .gitmodules not found. Skipping submodule init."
          fi

      # Set up programming environments
      - name: ☕ Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: 🟩 Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 💎 Set up Ruby 3.1
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'

      # Cache dependencies
      - name: 💾 Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: 💾 Cache Ruby gems
        if: hashFiles('**/Gemfile.lock') != ''
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      # Install tooling
      - name: 📦 Install SUSHI globally
        run: |
          npm install -g fsh-sushi
          echo "$(npm bin -g)" >> $GITHUB_PATH

      - name: 💎 Install Jekyll and Bundler
        run: gem install jekyll bundler

      # Check that versions are correctly installed
      - name: ✅ Verify tool versions
        run: |
          java -version
          node -v
          sushi --version
          jekyll --version

      # Download IG Publisher JAR
      - name: ⬇️ Download IG Publisher
        run: |
          mkdir -p input-cache
          wget -q -O input-cache/org.hl7.fhir.publisher.jar \
            https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar

      # Run SUSHI (FHIR Shorthand compiler)
      - name: 🧪 Run SUSHI manually
        run: sushi .

      # Run FHIR IG Publisher (build IG site)
      - name: 🛠️ Run IG Publisher with -no-sushi
        run: |
          java -jar input-cache/org.hl7.fhir.publisher.jar -ig . -no-sushi -tx https://tx.fhir.org/r4

      # Debug: Output folder contents
      - name: 🔍 Check output folder contents
        run: |
          echo "📁 Contents of ./output:"
          ls -l ./output || echo "⚠️ ./output directory does not exist!"

      # Prevent deployment if output folder is missing
      - name: 🧪 Check output directory before deploy
        run: |
          if [ ! -d "./output" ]; then
            echo "❌ ERROR: ./output directory does not exist. Exiting."
            exit 1
          fi

      # Deploy to GitHub Pages
      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
          publish_branch: gh-pages
          force_orphan: true
          enable_jekyll: false
          exclude_assets: .github
          user_name: GitHub Actions
          user_email: actions@github.com
